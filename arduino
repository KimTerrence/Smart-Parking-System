#include <ESP8266WiFi.h>
#include <WebSocketsClient.h>

const char* ssid = "HUAWEI-E5330-6FF2";
const char* password = "m7t05htj";

//-----IR sensor pin
const int irSensorPin1 = D1;
const int irSensorPin2 = D2;
const int irSensorPin3 = D3;
const int irSensorPin4 = D4;

// -----WebSocket client
WebSocketsClient webSocket;

void webSocketEvent(WStype_t type, uint8_t * payload, size_t length) {
  switch (type) {
    case WStype_DISCONNECTED:
      Serial.println("Disconnected from WebSocket server");
      break;
    case WStype_CONNECTED:
      Serial.println("Connected to WebSocket server");
      // Send a message to the server
      webSocket.sendTXT("ESP8266 connected");
      break;
    case WStype_TEXT:
      Serial.printf("Message from server: %s\n", payload);
      break;
  }
}

void setup() {
  Serial.begin(115200);

  // Setup IR sensor pin
  pinMode(irSensorPin1, INPUT);

  // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Setup WebSocket connection
  webSocket.begin("192.168.8.105", 8080); //-----server IP and port
  webSocket.onEvent(webSocketEvent);
}

void loop() {
  webSocket.loop();

  //-----Read data from IR sensor
  int irSensorValue1 = digitalRead(irSensorPin1);
  int irSensorValue2 = digitalRead(irSensorPin2);

  // Send the sensor value to the WebSocket server when motion is detected
  if (irSensorValue1 == LOW) {
    Serial.println("P1 occupied!");
    webSocket.sendTXT("occupied");
    delay(1000);
  }
   if (irSensorValue2 == LOW) {
    Serial.println("P2 occupied!");
    webSocket.sendTXT("occupied");
    delay(1000);
  }
  
  if(irSensorValue1 == LOW && irSensorValue2 == LOW){
    webSocket.sendTXT("No slot available");
  }
}



//-----lcd ir buzzer
#include <ESP8266WiFi.h>
#include <Servo.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27, 20, 4);
Servo myServo;  // Create a servo object

int ir = D3;
int ir2 = D5;

int buzzer = D8;

void setup() {
  Serial.begin(9600);
  myServo.attach(D6);  // Attach servo to GPIO12 (D6)
  pinMode(ir, INPUT);
  pinMode(ir2, INPUT);
  pinMode(buzzer, OUTPUT);

  lcd.init();
  lcd.backlight();
}

void loop() {
   int irvalue = digitalRead(ir);
   int ir2value = digitalRead(ir2);
if (ir2value == LOW){
    lcd.print("No slot available");
    Serial.println("No slot available");
  }
  else if(ir2value == HIGH){
    lcd.print("Slot Available");
       Serial.println("slot available");
    if(irvalue == LOW){
      myServo.write(5);
      lcd.print("Car Detected");
      delay(2000);
      tone(buzzer, 600);

    }else if(irvalue == HIGH){
      digitalWrite(buzzer, LOW);
      myServo.write(180);
      lcd.print("No Car Detected");
      delay(2000);
    }
  }
    delay(1000);
    lcd.clear();
}


//=================================test
import React, { useState, useEffect } from 'react';
import axios from 'axios';

function Test(){

    const [sensor, setSensor] = useState([]);

    useEffect(() => {
        axios.get('http://localhost:5000/sensor')
            .then(response => {
                setSensor(response.data);
            })
            .catch(error => {
                console.error('There was an error fetching the data!', error);
            });
    }, []);

    var a =  sensor.map(sensors => (
        sensor.sensor1
    ))
    

    return(
        <ul>
            {sensor.map(sensors => (
            <div>
                <p> {sensors.sensor1}</p>
                <p>{a}</p>
            </div>   
            ))}
        </ul>
    )
}

export default Test;